<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd 
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd">

	<description>Spring公共配置</description>
	<!-- 扫描除Controller外的组件 -->
	<context:component-scan base-package="com.binrui.shop">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- 开启定时任务 -->
	<task:annotation-driven />
	<!-- 加载数据源文件 -->
	<context:property-placeholder
			ignore-unresolvable="true" 
			file-encoding="utf-8"
			ignore-resource-not-found="true"
			location="classpath:app.properties,classpath:jdbc.properties" />

	<!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath*:/mybatis/mappers/*Mapper.xml" />
		<!-- mybatis配置文件路径 -->
		<property name="configLocation" value="classpath:/mybatis/config.xml" />
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
		<!-- 这个执行器会批量执行更新语句, 还有SIMPLE 和 REUSE -->
		<constructor-arg index="1" value="BATCH" />
	</bean>

	<!-- 扫描basePackage接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 映射器接口文件的包路径， -->
		<property name="basePackage" value="com.binrui.shop" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 启用事务注解 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
	
	<!-- 启用缓存注解 -->
	<cache:annotation-driven cache-manager="cacheManager" />
	<bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache/ehcache.xml" />
		<property name="shared" value="true" />
	</bean>
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="ehCacheManager" />
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    	<property name="dataSource" ref="dataSource"/>
    </bean>  
    
    <bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" />

	<!-- [MySQLDataSource] -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">  
  		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<!-- <property name="filters" value="${jdbc.filters}" /> -->
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
		<property name="testOnReturn" value="${jdbc.testOnReturn}" />
		<!--<property name="maxOpenPreparedStatements"  value="${jdbc.maxOpenPreparedStatements}" />  -->
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}" /> <!-- 打开removeAbandoned功能 -->
	    <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" /> <!-- 1800秒，也就是30分钟 -->
	    <property name="logAbandoned" value="${jdbc.logAbandoned}" /> <!-- 关闭abanded连接时输出错误日志 -->
	</bean>
	<!-- production环境 
	<beans profile="production">
		<context:property-placeholder
			ignore-unresolvable="true" file-encoding="utf-8"
			location="classpath:config.properties,classpath:jdbc.properties" />
	</beans>
	-->
</beans>